 public static List<Integer> climbingLeaderboard(List<Integer> ranked, List<Integer> player) {
    List<Integer> uniqueRanked = new ArrayList<>();
        if (!ranked.isEmpty()) {
            uniqueRanked.add(ranked.get(0));
            for (int i = 1; i < ranked.size(); i++) {
                if (!ranked.get(i).equals(ranked.get(i-1))) {
                    uniqueRanked.add(ranked.get(i));
                }
            }
        }
        
        // 2. Prepare the result list and a pointer for the uniqueRanked list
        List<Integer> playerRanks = new ArrayList<>();
        int i = uniqueRanked.size() - 1;

        // 3. Iterate through player scores
        for (int pScore : player) {
            // Find the rank using a two-pointer approach (from the end of uniqueRanked)
            while (i >= 0 && pScore >= uniqueRanked.get(i)) {
                i--;
            }
            
            // 4. Determine the rank and add to the result
            playerRanks.add(i + 2);
        }
        
        return playerRanks;
    
  }

    }
